(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{376:function(t,s,a){"use strict";a.r(s);var n=a(10),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"rabbitmq"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq"}},[t._v("#")]),t._v(" RabbitMQ")]),t._v(" "),s("blockquote",[s("p",[t._v("This tutorial will get you from zero to up and running with "),s("a",{attrs:{href:"/usage/transports/rabbitmq"}},[t._v("RabbitMQ")]),t._v(" and MassTransit.")])]),t._v(" "),s("iframe",{attrs:{id:"ytplayer",type:"text/html",width:"640",height:"360",src:"https://www.youtube.com/embed/_dfEMm7rRrI?autoplay=0"}}),t._v(" "),s("ul",[s("li",[t._v("The source for this sample is available "),s("a",{attrs:{href:"https://github.com/MassTransit/Sample-GettingStarted",target:"_blank",rel:"noopener noreferrer"}},[t._v("on GitHub"),s("OutboundLink")],1),t._v(".")])]),t._v(" "),s("h2",{attrs:{id:"prerequisites"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[t._v("#")]),t._v(" Prerequisites")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),s("p",[t._v("The following instructions assume you are starting from a completed "),s("a",{attrs:{href:"/quick-starts/in-memory"}},[t._v("In-Memory Quick Start")])])]),t._v(" "),s("p",[t._v("This example requires the following:")]),t._v(" "),s("ul",[s("li",[t._v("a functioning installation of the dotnet runtime and sdk (at least 6.0)")]),t._v(" "),s("li",[t._v("a functioning installation of "),s("code",[t._v("docker")]),t._v(" with "),s("code",[t._v("docker compose")]),t._v(" support")])]),t._v(" "),s("h2",{attrs:{id:"get-rabbitmq-up-and-running"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-rabbitmq-up-and-running"}},[t._v("#")]),t._v(" Get RabbitMQ up and running")]),t._v(" "),s("p",[t._v("For this quick start we recommend running the preconfigured "),s("a",{attrs:{href:"https://github.com/MassTransit/docker-rabbitmq",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker image maintained by the MassTransit team"),s("OutboundLink")],1),t._v(". It includes the delayed exchange plug-in, as well as the Management interface enabled.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15672")]),t._v(":15672 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5672")]),t._v(":5672 masstransit/rabbitmq\n")])])]),s("p",[t._v("If you are running on an ARM platform")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--platform")]),t._v(" linux/arm64 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15672")]),t._v(":15672 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5672")]),t._v(":5672 masstransit/rabbitmq\n")])])]),s("p",[t._v("Once its up and running you can "),s("a",{attrs:{href:"http://localhost:15672",target:"_blank",rel:"noopener noreferrer"}},[t._v("log into"),s("OutboundLink")],1),t._v(" the broker using "),s("code",[t._v("guest")]),t._v(", "),s("code",[t._v("guest")]),t._v(". You can see message rates, routings and active consumers using this interface.")]),t._v(" "),s("h2",{attrs:{id:"change-the-transport-to-rabbitmq"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#change-the-transport-to-rabbitmq"}},[t._v("#")]),t._v(" Change the Transport to RabbitMQ")]),t._v(" "),s("p",[t._v("Add the "),s("em",[t._v("MassTransit.RabbitMQ")]),t._v(" package to the project.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ dotnet "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" package MassTransit.RabbitMQ\n")])])]),s("h2",{attrs:{id:"edit-program-cs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#edit-program-cs"}},[t._v("#")]),t._v(" Edit Program.cs")]),t._v(" "),s("p",[t._v("Change "),s("code",[t._v("UsingInMemory")]),t._v(" to "),s("code",[t._v("UsingRabbitMq")])]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t._v("IHostBuilder")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreateHostBuilder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n    Host"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreateDefaultBuilder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ConfigureServices")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hostContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" services"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            services"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddMassTransit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// elided...")]),t._v("\n\n                x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("UsingRabbitMq")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cfg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    cfg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Host")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" h "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Username")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"guest"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                        h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Password")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"guest"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n                    cfg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ConfigureEndpoints")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            services"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddHostedService")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Worker"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("code",[t._v("localhost")]),t._v(" is where the docker image is running. We are inferring the default port of "),s("code",[t._v("5672")]),t._v(" and are using "),s("code",[t._v("\\")]),t._v(" as the "),s("a",{attrs:{href:"https://www.rabbitmq.com/vhosts.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("virtual host"),s("OutboundLink")],1),t._v(". "),s("code",[t._v("guest")]),t._v(" and "),s("code",[t._v("guest")]),t._v(" are the default username and password to talk to the cluster and "),s("a",{attrs:{href:"http://localhost:15672",target:"_blank",rel:"noopener noreferrer"}},[t._v("management dashboard"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"run-the-project"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run-the-project"}},[t._v("#")]),t._v(" Run the project")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ dotnet run\n")])])]),s("p",[t._v("The output should have changed to show the message consumer generating the output (again, press Control+C to exit). Notice that the bus address now starts with "),s("code",[t._v("rabbitmq")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Building...\ninfo: MassTransit[0]\n      Configured endpoint Message, Consumer: GettingStarted.MessageConsumer\ninfo: Microsoft.Hosting.Lifetime[0]\n      Application started. Press Ctrl+C to shut down.\ninfo: Microsoft.Hosting.Lifetime[0]\n      Hosting environment: Development\ninfo: Microsoft.Hosting.Lifetime[0]\n      Content root path: /Users/chris/Garbage/start/GettingStarted\ninfo: MassTransit[0]\n      Bus started: rabbitmq://localhost/\ninfo: GettingStarted.MessageConsumer[0]\n      Received Text: The time is 3/24/2021 12:11:10 PM -05:00\n")])])]),s("p",[t._v("At this point the service is connecting to RabbbitMQ on "),s("code",[t._v("localhost")]),t._v(" and publishing messages which are received by the consumer.")]),t._v(" "),s("p",[t._v("🎉")])])}),[],!1,null,null,null);s.default=e.exports}}]);