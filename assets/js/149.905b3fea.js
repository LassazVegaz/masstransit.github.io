(window.webpackJsonp=window.webpackJsonp||[]).push([[149],{433:function(t,a,s){"use strict";s.r(a);var e=s(10),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"dapper"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dapper"}},[t._v("#")]),t._v(" Dapper")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.nuget.org/packages/MassTransit.Dapper",target:"_blank",rel:"noopener noreferrer"}},[t._v("MassTransit.Dapper"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://dapper-tutorial.net/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Dapper"),a("OutboundLink")],1),t._v(" is a "),a("a",{attrs:{href:"https://github.com/StackExchange/Dapper",target:"_blank",rel:"noopener noreferrer"}},[t._v("super lightweight Micro-ORM"),a("OutboundLink")],1),t._v(" usable for saga persistence with Microsoft SQL Server. Dapper.Contrib is used for inserts and updates. The methods are virtual, so if you'd rather write the SQL yourself it is supported.")]),t._v(" "),a("p",[t._v("If you do not write your own sql, the model requires you use the "),a("code",[t._v("ExplicitKey")]),t._v(" attribute for the "),a("code",[t._v("CorrelationId")]),t._v(". And if you have properties that are not available as columns, you can use the "),a("code",[t._v("Computed")]),t._v(" attribute to not include them in the generated SQL. If you are using event correlation using other properties, it's highly recommended that you create indices for performance.")]),t._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OrderState")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token type-list"}},[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SagaStateMachineInstance")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token attribute"}},[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExplicitKey")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t._v("Guid")]),t._v(" CorrelationId "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token return-type class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")])]),t._v(" CurrentState "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t._v("DateTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("?")])]),t._v(" OrderDate "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"container-integration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#container-integration"}},[t._v("#")]),t._v(" Container Integration")]),t._v(" "),a("p",[t._v("To configure Dapper as the saga repository for a saga, use the code shown below using the "),a("em",[t._v("AddMassTransit")]),t._v(" container extension.")]),t._v(" "),a("div",{staticClass:"language-cs extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v("Â ")]),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-cs"}},[a("code",[t._v("container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddMassTransit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cfg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    cfg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token generic-method"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddSagaStateMachine")]),a("span",{pre:!0,attrs:{class:"token generic class-name"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("OrderStateMachine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" OrderState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("DapperRepository")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("connectionString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("The container extension will register the saga repository in the container. For more details on container configuration, review the "),a("RouterLink",{attrs:{to:"/usage/containers/"}},[t._v("container configuration")]),t._v(" section of the documentation.")],1),t._v(" "),a("h3",{attrs:{id:"limitations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#limitations"}},[t._v("#")]),t._v(" Limitations")]),t._v(" "),a("h4",{attrs:{id:"table-names"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#table-names"}},[t._v("#")]),t._v(" Table Names")]),t._v(" "),a("p",[t._v("The tablename can only be the pluralized form of the class name. So "),a("code",[t._v("OrderState")]),t._v(" would translate to table OrderState"),a("strong",[t._v("s")]),t._v(". This applies even if you write your own SQL for updates and inserts.")]),t._v(" "),a("h4",{attrs:{id:"correlation-expressions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#correlation-expressions"}},[t._v("#")]),t._v(" Correlation Expressions")]),t._v(" "),a("p",[t._v("The expressions you can use for correlation is somewhat limited. These types of expressions are handled:")]),t._v(" "),a("div",{staticClass:"language-cs extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cs"}},[a("code",[t._v("    x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CorrelationId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" someGuid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IsDone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CorrelationId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" someGuid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IsDone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("You can use multiple "),a("code",[t._v("&&")]),t._v(" in the expression. What you can not use is "),a("code",[t._v("||")]),t._v(" and negations. So a bool used like this "),a("code",[t._v("x.IsDone")]),t._v(" can only be handled as true and nothing else.")])])}),[],!1,null,null,null);a.default=n.exports}}]);