(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{386:function(e,s,t){"use strict";t.r(s);var a=t(10),r=Object(a.a)({},(function(){var e=this,s=e._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"_7-1-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-5"}},[e._v("#")]),e._v(" 7.1.5")]),e._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#health-checks"}},[e._v("Health Checks")])]),s("li",[s("a",{attrs:{href:"#azure-service-bus-session-saga-repository"}},[e._v("Azure Service Bus Session Saga Repository")])]),s("li",[s("a",{attrs:{href:"#published-message-scheduler-messages"}},[e._v("Published Message Scheduler Messages")])]),s("li",[s("a",{attrs:{href:"#state-machine-event-topology"}},[e._v("State Machine Event Topology")])]),s("li",[s("a",{attrs:{href:"#kafka-producer-registration"}},[e._v("Kafka Producer Registration")])]),s("li",[s("a",{attrs:{href:"#addgenericrequestclient"}},[e._v("AddGenericRequestClient")])]),s("li",[s("a",{attrs:{href:"#use-message-lifetime-scope-faults"}},[e._v("Use Message(Lifetime) Scope Faults")])]),s("li",[s("a",{attrs:{href:"#kafka-event-hub-checkpoint-concurrency-resolved"}},[e._v("Kafka / Event Hub Checkpoint Concurrency Resolved")])]),s("li",[s("a",{attrs:{href:"#rawjsonserializer-message-headers"}},[e._v("RawJsonSerializer Message Headers")])]),s("li",[s("a",{attrs:{href:"#amazon-sns"}},[e._v("Amazon SNS")])])])]),s("p"),e._v(" "),s("h2",{attrs:{id:"health-checks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#health-checks"}},[e._v("#")]),e._v(" Health Checks")]),e._v(" "),s("p",[e._v("Disconnected receive endpoints, which were connected using "),s("code",[e._v("ConnectReceiveEndpoint")]),e._v(" were staying in the health check list and showing up as degraded after being disconnected.")]),e._v(" "),s("h2",{attrs:{id:"azure-service-bus-session-saga-repository"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#azure-service-bus-session-saga-repository"}},[e._v("#")]),e._v(" Azure Service Bus Session Saga Repository")]),e._v(" "),s("p",[e._v("The saga repository was upgraded to the level of the others, using the same underlying components – which means it should now support property dependency injection of state machine activities.")]),e._v(" "),s("h2",{attrs:{id:"published-message-scheduler-messages"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#published-message-scheduler-messages"}},[e._v("#")]),e._v(" Published Message Scheduler Messages")]),e._v(" "),s("p",[e._v("The messages published to Quartz were using the wrong message type, which wasn't really an issue with RabbitMQ, but non-polymorphic brokers would not get the message to the scheduler.")]),e._v(" "),s("h2",{attrs:{id:"state-machine-event-topology"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#state-machine-event-topology"}},[e._v("#")]),e._v(" State Machine Event Topology")]),e._v(" "),s("p",[e._v("A state machine saga can now specify events that do not configure the consume topology. This will eliminate excessive exchanges/topics for directed events that are sent to the saga such as responses. The option is specified during event configuration:")]),e._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("Event")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=>")]),e._v(" WaitTimeout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=>")]),e._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("ConfigureConsumeTopology "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),s("h2",{attrs:{id:"kafka-producer-registration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kafka-producer-registration"}},[e._v("#")]),e._v(" Kafka Producer Registration")]),e._v(" "),s("p",[e._v("The Kafka registration methods were changed from method chaining to nested closures, to be consistent. This also allows the "),s("em",[e._v("context")]),e._v(" to be used to resolve dependencies (such as the Confluent schema registry client).")]),e._v(" "),s("h2",{attrs:{id:"addgenericrequestclient"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#addgenericrequestclient"}},[e._v("#")]),e._v(" AddGenericRequestClient")]),e._v(" "),s("p",[e._v("Users of Microsoft DI can specify "),s("code",[e._v("services.AddGenericRequestClient()")]),e._v(" to automatically resolve any request client type (requests will be published).")]),e._v(" "),s("h2",{attrs:{id:"use-message-lifetime-scope-faults"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#use-message-lifetime-scope-faults"}},[e._v("#")]),e._v(" Use Message(Lifetime) Scope Faults")]),e._v(" "),s("p",[e._v("Multiple faults were being published in combination with retry, the outbox, and message lifetime scope filters. Edge case, but the issue was resolved.")]),e._v(" "),s("h2",{attrs:{id:"kafka-event-hub-checkpoint-concurrency-resolved"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kafka-event-hub-checkpoint-concurrency-resolved"}},[e._v("#")]),e._v(" Kafka / Event Hub Checkpoint Concurrency Resolved")]),e._v(" "),s("p",[e._v("The issue with non-deterministic checkpoints when using concurrent event consumption was resolved.")]),e._v(" "),s("h2",{attrs:{id:"rawjsonserializer-message-headers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rawjsonserializer-message-headers"}},[e._v("#")]),e._v(" RawJsonSerializer Message Headers")]),e._v(" "),s("p",[e._v("The RawJsonSerializer was improperly transferred transport headers from the inbound message to outgoing messages. This was causing exceptions, such as invalid table value, using RabbitMQ and may have been a problem with other brokers.")]),e._v(" "),s("h2",{attrs:{id:"amazon-sns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amazon-sns"}},[e._v("#")]),e._v(" Amazon SNS")]),e._v(" "),s("p",[e._v("GroupId/DeduplicationId is now set on published (topic) messages. Previously it was only set on Sent (queue) messages.")])])}),[],!1,null,null,null);s.default=r.exports}}]);